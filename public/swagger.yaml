openapi: '3.0.0'

info:
  version: "1.0.0"
  title: NIMBLE LOGISTIC PROCESS REST API
  description: 'This is the Rest API for the Logistic Smart Contract in Nimble.'
  contact:
    email: akayeshmantha@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  
servers: 
  - url: http://localhost:3000
  
paths:
  /health:
    get:
      operationId: health
      tags:
        - health
      description: Get health status of app 
      responses:
        200:
          description: Health check response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example: 
                application/json: { "success": true, "message": "Server is up!", "status": "UP" }

  /ping:
    get:
      operationId: ping
      tags:
        - health
      description: Ping blockchain network
      responses:
        200:
          description: Ping response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseBody'
  
  '/order/{orderId}':
    get:
      operationId: getOrder
      tags:
        - order
      description: Get order from blockchain
      security: #this is not at root level in yaml because only this route is secured/needs auth token
      - BearerAuth: []
      parameters:
        - name: orderId
          in: path
          schema:
            type: string
          description: Asset ID
          required: true
      responses:
        200:
          description: Asset response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
    post:
      operationId: createOrder
      tags:
        - order
      description: Start Logistic Process on the blockchain ledger
      security: #this is not at root level in yaml because only this route is secured/needs auth token
      - BearerAuth: []
      requestBody:
        description: Create asset form
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetForm'
      responses:
        200:
          description: Logistic Initiate response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
    put:
      operationId: updateOrder
      tags:
        - order
      description: Update the custodian of the Logistic Process on the blockchain ledger
      security: #this is not at root level in yaml because only this route is secured/needs auth token
      - BearerAuth: []
      parameters:
        - name: orderId
          in: path
          schema:
            type: string
          description: Order ID
          required: true
      requestBody:
        description: Update order form
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetForm'
      responses:
        200:
          description: Order update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
    delete:
      operationId: deleteOrder
      tags:
        - order
      security: #this is not at root level in yaml because only this route is secured/needs auth token
      - BearerAuth: []
      description: Delete asset from the blockchain ledger
      parameters:
        - name: orderId
          in: path
          schema:
            type: string
          description: Order ID
          required: true
      responses:
        200:
          description: Order deletion response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
          
  '/orderExists/{orderId}':
    get:
      operationId: orderExists
      tags:
        - order
      description: Determine if asset exists on the blockchain ledger
      security: #this is not at root level in yaml because only this route is secured/needs auth token
      - BearerAuth: []
      parameters:
        - name: orderId
          in: path
          schema:
            type: string
          description: Asset ID
          required: true
      responses:
        200:
          description: Asset exists response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetExistsResponse'
  
  /securedPing:
    get:
      operationId: securedPing
      tags:
        - health
      description: Ping blockchain network (authentication required)
      security: #this is not at root level in yaml because only this route is secured/needs auth token
      - BearerAuth: []
      responses:
        200:
          description: Secured route response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuredPingResponse'

  '/identity/{userId}':
    get:
      operationId: getUser
      tags:
        - identity
      description: Get Identity from blockchain
      security: #this is not at root level in yaml because only this route is secured/needs auth token
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          description: User ID
          required: true
      responses:
        200:
          description: User response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
    post:
      operationId: createUser
      tags:
        - identity
      description: Create Identity on the blockchain ledger
      security: #this is not at root level in yaml because only this route is secured/needs auth token
        - BearerAuth: []
      requestBody:
        description: Create Identity form
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetForm'
      responses:
        200:
          description: Asset creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
    put:
      operationId: updateUser
      tags:
        - identity
      description: Update Identity on the blockchain ledger
      security: #this is not at root level in yaml because only this route is secured/needs auth token
        - BearerAuth: []
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          description: User ID
          required: true
      requestBody:
        description: Update Identity form
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetForm'
      responses:
        200:
          description: Identity update response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
    delete:
      operationId: deleteUser
      tags:
        - identity
      security: #this is not at root level in yaml because only this route is secured/needs auth token
        - BearerAuth: []
      description: Delete Identity from the blockchain ledger
      parameters:
        - name: userId
          in: path
          schema:
            type: string
          description: User ID
          required: true
      responses:
        200:
          description: User deletion response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetResponse'
components:
  securitySchemes:
      BearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT 
  schemas:
    ResponseBody:
      properties:
        success:
          type: boolean
        message: 
          type: string
          
    HealthResponse:
      allOf:  
        - $ref: '#/components/schemas/ResponseBody'
        - type: object
          properties:
            success:
              type: boolean
            message: 
              type: string
            status:
              type: string
              
    SecuredPingResponse:
      allOf:  
        - $ref: '#/components/schemas/ResponseBody'
        - type: object
          properties:
            status:
              type: string

    AssetResponse:
      properties:
        result:
          type: object
          properties:
            value:
              type: string
        success:
          type: boolean

    AssetDeletionResponse:
      properties:
        result:
          type: string
        success:
          type: boolean

    AssetForm:
      properties:
        value:
          type: string
    
    AssetExistsResponse:
      properties:
        result:
          type: boolean
        success:
          type: boolean

    Data:
      properties:
        id:
          type: string
        stringValue: 
          type: string
        numValue:
          type: number
        date:
          type: string
          format: date-time
        email:
          type: string
          format: email
